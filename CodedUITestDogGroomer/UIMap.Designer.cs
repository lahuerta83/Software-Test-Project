// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestDogGroomer
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddDogMethod - Use 'AddDogMethodParams' to pass parameters into this method.
        /// </summary>
        public void AddDogMethod()
        {
            #region Variable Declarations
            WinEdit uIDognameEdit = this.UILeighAnnsGroomingAppWindow.UIDognameWindow.UIDognameEdit;
            WinButton uIAddDogButtonButton = this.UILeighAnnsGroomingAppWindow.UIAddDogButtonWindow.UIAddDogButtonButton;
            WinList uILineList = this.UILeighAnnsGroomingAppWindow.UILineWindow.UILineList;
            WinComboBox uIComboBox1ComboBox = this.UILeighAnnsGroomingAppWindow.UIComboBox1Window.UIComboBox1ComboBox;
            WinButton uIAddServicesButton = this.UILeighAnnsGroomingAppWindow.UIAddServicesWindow.UIAddServicesButton;
            WinButton uINextDogButton = this.UILeighAnnsGroomingAppWindow.UINextDogWindow.UINextDogButton;
            WinCheckBox uINailTrimCheckBox = this.UILeighAnnsGroomingAppWindow.UINailTrimWindow.UINailTrimCheckBox;
            #endregion

            // Type 'Rocky' in 'dogname' text box
            uIDognameEdit.Text = this.AddDogMethodParams.UIDognameEditText;

            // Click 'Add Dog Button' button
            Mouse.Click(uIAddDogButtonButton, new Point(185, 17));

            // Type 'Roscoe' in 'dogname' text box
            uIDognameEdit.Text = this.AddDogMethodParams.UIDognameEditText1;

            // Click 'Add Dog Button' button
            Mouse.Click(uIAddDogButtonButton, new Point(179, 6));

            // Type '{LShiftKey}' in 'Add Dog Button' button
            Keyboard.SendKeys(uIAddDogButtonButton, this.AddDogMethodParams.UIAddDogButtonButtonSendKeys, ModifierKeys.None);

            // Type 'Maggie' in 'dogname' text box
            uIDognameEdit.Text = this.AddDogMethodParams.UIDognameEditText2;

            // Click 'Add Dog Button' button
            Mouse.Click(uIAddDogButtonButton, new Point(180, 4));

            // Type 'Allie' in 'dogname' text box
            uIDognameEdit.Text = this.AddDogMethodParams.UIDognameEditText3;

            // Click 'Add Dog Button' button
            Mouse.Click(uIAddDogButtonButton, new Point(168, 14));

            // Type 'Shoebox' in 'dogname' text box
            uIDognameEdit.Text = this.AddDogMethodParams.UIDognameEditText4;

            // Click 'Add Dog Button' button
            Mouse.Click(uIAddDogButtonButton, new Point(186, 5));

            // Select '1 . Rocky' in 'line' list box
            uILineList.SelectedItemsAsString = this.AddDogMethodParams.UILineListSelectedItemsAsString;

            // Select 'fullgroom' in 'comboBox1' combo box
            uIComboBox1ComboBox.SelectedItem = this.AddDogMethodParams.UIComboBox1ComboBoxSelectedItem;

            // Click 'Add Services' button
            Mouse.Click(uIAddServicesButton, new Point(54, 11));

            // Click 'Next Dog' button
            Mouse.Click(uINextDogButton, new Point(79, 16));

            // Select 'partialgroom' in 'comboBox1' combo box
            uIComboBox1ComboBox.SelectedItem = this.AddDogMethodParams.UIComboBox1ComboBoxSelectedItem1;

            // Select 'Nail Trim' check box
            uINailTrimCheckBox.Checked = this.AddDogMethodParams.UINailTrimCheckBoxChecked;

            // Click 'Add Services' button
            Mouse.Click(uIAddServicesButton, new Point(100, 11));
        }
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinEdit uIDognameEdit = this.UILeighAnnsGroomingAppWindow.UIDognameWindow.UIDognameEdit;
            WinButton uIAddDogButtonButton = this.UILeighAnnsGroomingAppWindow.UIAddDogButtonWindow.UIAddDogButtonButton;
            WinComboBox uIComboBox1ComboBox = this.UILeighAnnsGroomingAppWindow.UIComboBox1Window.UIComboBox1ComboBox;
            WinCheckBox uINailTrimCheckBox = this.UILeighAnnsGroomingAppWindow.UINailTrimWindow.UINailTrimCheckBox;
            WinButton uIAddServicesButton = this.UILeighAnnsGroomingAppWindow.UIAddServicesWindow.UIAddServicesButton;
            WinButton uINextDogButton = this.UILeighAnnsGroomingAppWindow.UINextDogWindow.UINextDogButton;
            #endregion

            // Type 'Rocky' in 'dogname' text box
            uIDognameEdit.Text = this.RecordedMethod1Params.UIDognameEditText;

            // Click 'Add Dog Button' button
            Mouse.Click(uIAddDogButtonButton, new Point(197, 15));

            // Type 'Roscoe' in 'dogname' text box
            uIDognameEdit.Text = this.RecordedMethod1Params.UIDognameEditText1;

            // Click 'Add Dog Button' button
            Mouse.Click(uIAddDogButtonButton, new Point(173, 6));

            // Type 'Sh' in 'Add Dog Button' button
            Keyboard.SendKeys(uIAddDogButtonButton, this.RecordedMethod1Params.UIAddDogButtonButtonSendKeys, ModifierKeys.None);

            // Type 'Shoebox' in 'dogname' text box
            uIDognameEdit.Text = this.RecordedMethod1Params.UIDognameEditText2;

            // Click 'Add Dog Button' button
            Mouse.Click(uIAddDogButtonButton, new Point(195, 6));

            // Click 'dogname' text box
            Mouse.Click(uIDognameEdit, new Point(61, 5));

            // Select 'fullgroom' in 'comboBox1' combo box
            uIComboBox1ComboBox.SelectedItem = this.RecordedMethod1Params.UIComboBox1ComboBoxSelectedItem;

            // Select 'Nail Trim' check box
            uINailTrimCheckBox.Checked = this.RecordedMethod1Params.UINailTrimCheckBoxChecked;

            // Click 'Add Services' button
            Mouse.Click(uIAddServicesButton, new Point(72, 18));

            // Click 'Next Dog' button
            Mouse.Click(uINextDogButton, new Point(83, 11));

            // Select 'oatmealbath' in 'comboBox1' combo box
            uIComboBox1ComboBox.SelectedItem = this.RecordedMethod1Params.UIComboBox1ComboBoxSelectedItem1;

            // Click 'Add Services' button
            Mouse.Click(uIAddServicesButton, new Point(74, 14));
        }
        
        #region Properties
        public virtual AddDogMethodParams AddDogMethodParams
        {
            get
            {
                if ((this.mAddDogMethodParams == null))
                {
                    this.mAddDogMethodParams = new AddDogMethodParams();
                }
                return this.mAddDogMethodParams;
            }
        }
        
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UILeighAnnsGroomingAppWindow UILeighAnnsGroomingAppWindow
        {
            get
            {
                if ((this.mUILeighAnnsGroomingAppWindow == null))
                {
                    this.mUILeighAnnsGroomingAppWindow = new UILeighAnnsGroomingAppWindow();
                }
                return this.mUILeighAnnsGroomingAppWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddDogMethodParams mAddDogMethodParams;
        
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UILeighAnnsGroomingAppWindow mUILeighAnnsGroomingAppWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddDogMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AddDogMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Rocky' in 'dogname' text box
        /// </summary>
        public string UIDognameEditText = "Rocky";
        
        /// <summary>
        /// Type 'Roscoe' in 'dogname' text box
        /// </summary>
        public string UIDognameEditText1 = "Roscoe";
        
        /// <summary>
        /// Type '{LShiftKey}' in 'Add Dog Button' button
        /// </summary>
        public string UIAddDogButtonButtonSendKeys = "{LShiftKey}";
        
        /// <summary>
        /// Type 'Maggie' in 'dogname' text box
        /// </summary>
        public string UIDognameEditText2 = "Maggie";
        
        /// <summary>
        /// Type 'Allie' in 'dogname' text box
        /// </summary>
        public string UIDognameEditText3 = "Allie";
        
        /// <summary>
        /// Type 'Shoebox' in 'dogname' text box
        /// </summary>
        public string UIDognameEditText4 = "Shoebox";
        
        /// <summary>
        /// Select '1 . Rocky' in 'line' list box
        /// </summary>
        public string UILineListSelectedItemsAsString = "1 . Rocky";
        
        /// <summary>
        /// Select 'fullgroom' in 'comboBox1' combo box
        /// </summary>
        public string UIComboBox1ComboBoxSelectedItem = "fullgroom";
        
        /// <summary>
        /// Select 'partialgroom' in 'comboBox1' combo box
        /// </summary>
        public string UIComboBox1ComboBoxSelectedItem1 = "partialgroom";
        
        /// <summary>
        /// Select 'Nail Trim' check box
        /// </summary>
        public bool UINailTrimCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'Rocky' in 'dogname' text box
        /// </summary>
        public string UIDognameEditText = "Rocky";
        
        /// <summary>
        /// Type 'Roscoe' in 'dogname' text box
        /// </summary>
        public string UIDognameEditText1 = "Roscoe";
        
        /// <summary>
        /// Type 'Sh' in 'Add Dog Button' button
        /// </summary>
        public string UIAddDogButtonButtonSendKeys = "Sh";
        
        /// <summary>
        /// Type 'Shoebox' in 'dogname' text box
        /// </summary>
        public string UIDognameEditText2 = "Shoebox";
        
        /// <summary>
        /// Select 'fullgroom' in 'comboBox1' combo box
        /// </summary>
        public string UIComboBox1ComboBoxSelectedItem = "fullgroom";
        
        /// <summary>
        /// Select 'Nail Trim' check box
        /// </summary>
        public bool UINailTrimCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'oatmealbath' in 'comboBox1' combo box
        /// </summary>
        public string UIComboBox1ComboBoxSelectedItem1 = "oatmealbath";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILeighAnnsGroomingAppWindow : WinWindow
    {
        
        public UILeighAnnsGroomingAppWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Leigh Ann\'s Grooming App";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Leigh Ann\'s Grooming App");
            #endregion
        }
        
        #region Properties
        public UIDognameWindow UIDognameWindow
        {
            get
            {
                if ((this.mUIDognameWindow == null))
                {
                    this.mUIDognameWindow = new UIDognameWindow(this);
                }
                return this.mUIDognameWindow;
            }
        }
        
        public UIAddDogButtonWindow UIAddDogButtonWindow
        {
            get
            {
                if ((this.mUIAddDogButtonWindow == null))
                {
                    this.mUIAddDogButtonWindow = new UIAddDogButtonWindow(this);
                }
                return this.mUIAddDogButtonWindow;
            }
        }
        
        public UILineWindow UILineWindow
        {
            get
            {
                if ((this.mUILineWindow == null))
                {
                    this.mUILineWindow = new UILineWindow(this);
                }
                return this.mUILineWindow;
            }
        }
        
        public UIComboBox1Window UIComboBox1Window
        {
            get
            {
                if ((this.mUIComboBox1Window == null))
                {
                    this.mUIComboBox1Window = new UIComboBox1Window(this);
                }
                return this.mUIComboBox1Window;
            }
        }
        
        public UIAddServicesWindow UIAddServicesWindow
        {
            get
            {
                if ((this.mUIAddServicesWindow == null))
                {
                    this.mUIAddServicesWindow = new UIAddServicesWindow(this);
                }
                return this.mUIAddServicesWindow;
            }
        }
        
        public UINextDogWindow UINextDogWindow
        {
            get
            {
                if ((this.mUINextDogWindow == null))
                {
                    this.mUINextDogWindow = new UINextDogWindow(this);
                }
                return this.mUINextDogWindow;
            }
        }
        
        public UINailTrimWindow UINailTrimWindow
        {
            get
            {
                if ((this.mUINailTrimWindow == null))
                {
                    this.mUINailTrimWindow = new UINailTrimWindow(this);
                }
                return this.mUINailTrimWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDognameWindow mUIDognameWindow;
        
        private UIAddDogButtonWindow mUIAddDogButtonWindow;
        
        private UILineWindow mUILineWindow;
        
        private UIComboBox1Window mUIComboBox1Window;
        
        private UIAddServicesWindow mUIAddServicesWindow;
        
        private UINextDogWindow mUINextDogWindow;
        
        private UINailTrimWindow mUINailTrimWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDognameWindow : WinWindow
    {
        
        public UIDognameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dogname";
            this.WindowTitles.Add("Leigh Ann\'s Grooming App");
            #endregion
        }
        
        #region Properties
        public WinEdit UIDognameEdit
        {
            get
            {
                if ((this.mUIDognameEdit == null))
                {
                    this.mUIDognameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIDognameEdit.WindowTitles.Add("Leigh Ann\'s Grooming App");
                    #endregion
                }
                return this.mUIDognameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIDognameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAddDogButtonWindow : WinWindow
    {
        
        public UIAddDogButtonWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "adddog";
            this.WindowTitles.Add("Leigh Ann\'s Grooming App");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddDogButtonButton
        {
            get
            {
                if ((this.mUIAddDogButtonButton == null))
                {
                    this.mUIAddDogButtonButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddDogButtonButton.SearchProperties[WinButton.PropertyNames.Name] = "Add Dog Button";
                    this.mUIAddDogButtonButton.WindowTitles.Add("Leigh Ann\'s Grooming App");
                    #endregion
                }
                return this.mUIAddDogButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddDogButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILineWindow : WinWindow
    {
        
        public UILineWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "line";
            this.WindowTitles.Add("Leigh Ann\'s Grooming App");
            #endregion
        }
        
        #region Properties
        public WinList UILineList
        {
            get
            {
                if ((this.mUILineList == null))
                {
                    this.mUILineList = new WinList(this);
                    #region Search Criteria
                    this.mUILineList.SearchProperties[WinList.PropertyNames.Name] = "List of Dogs";
                    this.mUILineList.WindowTitles.Add("Leigh Ann\'s Grooming App");
                    #endregion
                }
                return this.mUILineList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUILineList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIComboBox1Window : WinWindow
    {
        
        public UIComboBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "comboBox1";
            this.WindowTitles.Add("Leigh Ann\'s Grooming App");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIComboBox1ComboBox
        {
            get
            {
                if ((this.mUIComboBox1ComboBox == null))
                {
                    this.mUIComboBox1ComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIComboBox1ComboBox.WindowTitles.Add("Leigh Ann\'s Grooming App");
                    #endregion
                }
                return this.mUIComboBox1ComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIComboBox1ComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAddServicesWindow : WinWindow
    {
        
        public UIAddServicesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Leigh Ann\'s Grooming App");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddServicesButton
        {
            get
            {
                if ((this.mUIAddServicesButton == null))
                {
                    this.mUIAddServicesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddServicesButton.SearchProperties[WinButton.PropertyNames.Name] = "Add Services";
                    this.mUIAddServicesButton.WindowTitles.Add("Leigh Ann\'s Grooming App");
                    #endregion
                }
                return this.mUIAddServicesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddServicesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINextDogWindow : WinWindow
    {
        
        public UINextDogWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nextdog";
            this.WindowTitles.Add("Leigh Ann\'s Grooming App");
            #endregion
        }
        
        #region Properties
        public WinButton UINextDogButton
        {
            get
            {
                if ((this.mUINextDogButton == null))
                {
                    this.mUINextDogButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINextDogButton.SearchProperties[WinButton.PropertyNames.Name] = "Next Dog";
                    this.mUINextDogButton.WindowTitles.Add("Leigh Ann\'s Grooming App");
                    #endregion
                }
                return this.mUINextDogButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINextDogButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINailTrimWindow : WinWindow
    {
        
        public UINailTrimWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkBox1";
            this.WindowTitles.Add("Leigh Ann\'s Grooming App");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UINailTrimCheckBox
        {
            get
            {
                if ((this.mUINailTrimCheckBox == null))
                {
                    this.mUINailTrimCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUINailTrimCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Nail Trim";
                    this.mUINailTrimCheckBox.WindowTitles.Add("Leigh Ann\'s Grooming App");
                    #endregion
                }
                return this.mUINailTrimCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUINailTrimCheckBox;
        #endregion
    }
}
